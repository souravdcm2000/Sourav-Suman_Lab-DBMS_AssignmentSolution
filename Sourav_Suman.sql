Create Database if not exists `order-directory` ;
use `order-directory`;

create table if not exists `supplier`(
`SUPP_ID` int primary key,
`SUPP_NAME` varchar(50) ,
`SUPP_CITY` varchar(50),
`SUPP_PHONE` varchar(10)
);

CREATE TABLE IF NOT EXISTS `customer` (
  `CUS_ID` INT NOT NULL,
  `CUS_NAME` VARCHAR(20) NULL DEFAULT NULL,
  `CUS_PHONE` VARCHAR(10),
  `CUS_CITY` varchar(30) ,
  `CUS_GENDER` CHAR,
  PRIMARY KEY (`CUS_ID`));

CREATE TABLE IF NOT EXISTS `category` (
  `CAT_ID` INT NOT NULL,
  `CAT_NAME` VARCHAR(20) NULL DEFAULT NULL,
 
  PRIMARY KEY (`CAT_ID`)
  );

  CREATE TABLE IF NOT EXISTS `product` (
  `PRO_ID` INT NOT NULL,
  `PRO_NAME` VARCHAR(20) NULL DEFAULT NULL,
  `PRO_DESC` VARCHAR(60) NULL DEFAULT NULL,
  `CAT_ID` INT NOT NULL,
  PRIMARY KEY (`PRO_ID`),
  FOREIGN KEY (`CAT_ID`) REFERENCES CATEGORY (`CAT_ID`)
  );

CREATE TABLE IF NOT EXISTS `product_details` (
  `PROD_ID` INT NOT NULL,
  `PRO_ID` INT NOT NULL,
  `SUPP_ID` INT NOT NULL,
  `PROD_PRICE` INT NOT NULL,
  PRIMARY KEY (`PROD_ID`),
  FOREIGN KEY (`PRO_ID`) REFERENCES PRODUCT (`PRO_ID`),
  FOREIGN KEY (`SUPP_ID`) REFERENCES SUPPLIER(`SUPP_ID`)
  );

CREATE TABLE IF NOT EXISTS `order` (
  `ORD_ID` INT NOT NULL,
  `ORD_AMOUNT` INT NOT NULL,
  `ORD_DATE` DATE,
  `CUS_ID` INT NOT NULL,
  `PROD_ID` INT NOT NULL,
  PRIMARY KEY (`ORD_ID`),
  FOREIGN KEY (`CUS_ID`) REFERENCES CUSTOMER(`CUS_ID`),
  FOREIGN KEY (`PROD_ID`) REFERENCES PRODUCT_DETAILS(`PROD_ID`)
  );

CREATE TABLE IF NOT EXISTS `rating` (
  `RAT_ID` INT NOT NULL,
  `CUS_ID` INT NOT NULL,
  `SUPP_ID` INT NOT NULL,
  `RAT_RATSTARS` INT NOT NULL,
  PRIMARY KEY (`RAT_ID`),
  FOREIGN KEY (`SUPP_ID`) REFERENCES SUPPLIER (`SUPP_ID`),
  FOREIGN KEY (`CUS_ID`) REFERENCES CUSTOMER(`CUS_ID`)
  );

insert into `supplier` values(1,"Sourav","Uttarpradesh",'986555555');
insert into `supplier` values(2,"Pooja","Delhi",'8565455522');
insert into `supplier` values(3,"Komal","Bihar",'9785462315');
insert into `supplier` values(4,"Shiv hardware","Kavita",'6256325521');
insert into `supplier` values(5,"Uttam","Haridwar",'75445566221');

INSERT INTO `CUSTOMER` VALUES(1,"Amit",'689547788',"Noida",'f');
INSERT INTO `CUSTOMER` VALUES(2,"Arjun",'9785463215',"Delhi",'m');
INSERT INTO `CUSTOMER` VALUES(3,"Heena",'365698888',"Ludhiana",'f');
INSERT INTO `CUSTOMER` VALUES(4,"Pooja",'97878745459',"Kochi",'m');
INSERT INTO `CUSTOMER` VALUES(5,"Komal",'78568923399',"Gaurav",'f');

INSERT INTO `CATEGORY` VALUES( 1,"FOOD");
INSERT INTO `CATEGORY` VALUES(2,"GAMES");
INSERT INTO `CATEGORY` VALUES(3,"GROCERIES");
INSERT INTO `CATEGORY` VALUES (4,"ACCESSORIES");
INSERT INTO `CATEGORY` VALUES(5,"CLOTHES");

INSERT INTO `PRODUCT` VALUES(1,"GTA V","SIUIIUIDSKJ",2);
INSERT INTO `PRODUCT` VALUES(2,"UNDERDOGS","KSJKFDJSKDSFD",5);
INSERT INTO `PRODUCT` VALUES(3,"FOG LAPTOP","DKSJDKJSIJNTERND",4);
INSERT INTO `PRODUCT` VALUES(4,"PIZZA","ISDFOISDJKLTH",3);
INSERT INTO `PRODUCT` VALUES(5,"BURGER","DSJDKKJTH",1);

INSERT INTO PRODUCT_DETAILS VALUES(1,1,2,1500);
INSERT INTO PRODUCT_DETAILS VALUES(2,3,5,30000);
INSERT INTO PRODUCT_DETAILS VALUES(3,5,1,3000);
INSERT INTO PRODUCT_DETAILS VALUES(4,2,3,2500);
INSERT INTO PRODUCT_DETAILS VALUES(5,4,1,1000);

INSERT INTO `ORDER` VALUES (50,2000,"2021-10-06",2,1);
INSERT INTO `ORDER` VALUES(20,1500,"2021-10-12",3,5);
INSERT INTO `ORDER` VALUES(25,30500,"2021-09-16",5,2);
INSERT INTO `ORDER` VALUES(26,2000,"2021-10-05",1,1);
INSERT INTO `ORDER` VALUES(30,3500,"2021-08-16",4,3);

INSERT INTO `RATING` VALUES(1,2,2,4);
INSERT INTO `RATING` VALUES(2,3,4,3);
INSERT INTO `RATING` VALUES(3,5,1,5);
INSERT INTO `RATING` VALUES(4,1,3,2);
INSERT INTO `RATING` VALUES(5,4,5,4);

SELECT CUSTOMER.cus_gender, COUNT(CUSTOMER.cus_gender) AS count FROM
	CUSTOMER INNER JOIN `ORDER` ON CUSTOMER.cus_id = `ORDER`.cus_id WHERE `ORDER`.ord_amount >= 3000 GROUP BY CUSTOMER.cus_gender;
    
SELECT `ORDER`.*, PRODUCT.pro_name FROM `ORDER`, PRODUCT_DETAILS, PRODUCT WHERE `ORDER`.cus_id = 2
	AND `ORDER`.prod_id = PRODUCT_DETAILS.prod_id AND PRODUCT_DETAILS.pro_id = PRODUCT.pro_id;
    

SELECT SUPPLIER.* FROM SUPPLIER, PRODUCT_DETAILS WHERE SUPPLIER.supp_id IN
(SELECT PRODUCT_DETAILS.supp_id FROM PRODUCT_DETAILS group by PRODUCT_DETAILS.supp_id HAVING COUNT(PRODUCT_DETAILS.supp_id) > 1 )
GROUP BY SUPPLIER.supp_id;


SELECT CATEGORY.* FROM `ORDER` INNER JOIN PRODUCT_DETAILS ON
`ORDER`.prod_id = PRODUCT_DETAILS.prod_id INNER JOIN PRODUCT ON
PRODUCT.pro_id = PRODUCT_DETAILS.pro_id INNER JOIN CATEGORY ON
CATEGORY.cat_id = PRODUCT.cat_id HAVING min(`ORDER`.ord_amount);


SELECT PRODUCT.pro_id, PRODUCT.pro_name FROM `ORDER` INNER JOIN PRODUCT_DETAILS ON
PRODUCT_DETAILS.prod_id = `ORDER`.prod_id INNER JOIN PRODUCT ON
PRODUCT.pro_id = PRODUCT_DETAILS.pro_id WHERE `ORDER`.ord_date > "2021-10-05";


SELECT CUSTOMER.cus_name, CUSTOMER.cus_gender FROM CUSTOMER WHERE CUSTOMER.cus_name
LIKE 'A%' OR CUSTOMER.cus_name LIKE '%A';

DELIMITER $$
use `order-directory` $$
CREATE PROCEDURE PROC_1()
BEGIN
	SELECT SUPPLIER.supp_id, SUPPLIER.supp_name, rating.rat_ratstars,
	CASE
		WHEN RATING.rat_ratstars > 4 THEN "Genuine Supplier"
		WHEN RATING.rat_ratstars > 2 THEN "Average Supplier"
		ELSE "Supplier should not be considered"
	END
	As verdict FROM RATING INNER JOIN Supplier ON SUPPLIER.supp_id = RATING.supp_id;
END $$

CALL PROC_1;